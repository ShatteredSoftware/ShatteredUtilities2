/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds
 */


buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
        classpath 'com.netflix.nebula:gradle-aggregate-javadocs-plugin:2.2.+'
    }
}

plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

apply plugin: 'java'
apply plugin: 'nebula-aggregate-javadocs'
apply plugin: 'maven'

group = 'com.github.ShatteredSuite'

configurations {
    childJars
}

dependencies {
    compile project(":core")
    compile project(":1.12")
    compile project(":1.13")
    compile project(":1.14")
    compile project(":1.15")
}

shadowJar {
    classifier = null
}

allprojects {
    apply plugin: 'idea'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'com.github.shatteredsuite.ShatteredUtilities'
    version = '2.0.0'

    repositories {
        jcenter()
        mavenLocal()
        maven { url 'https://jitpack.io' } // This allows us to use jitpack projects
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    sourceSets {
        main {
            java {
                srcDirs = ["src/main/java", "src/generated/java"]
            }
            resources {
                srcDirs = ["src/main/resources", "ui/assets"]
            }
        }
    }

    configurations.all {
        resolutionStrategy {
            // fail eagerly on version conflict (includes transitive dependencies)
            // e.g. multiple different versions of the same dependency (group and name are equal)
            failOnVersionConflict()
            // cache dynamic versions for 10 minutes
            cacheDynamicVersionsFor 10*60, 'seconds'
            // don't cache changing modules at all
            cacheChangingModulesFor 0, 'seconds'
        }
    }
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    shadowJar {
        classifier = null
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "ShatteredUtilities"
            groupId = 'com.github.shatteredsuite'
            artifact shadowJar
        }
    }
}

//task jars {
//    dependsOn shadowJar
//    dependsOn aggregateJavadoc
//    doLast {
//        copy {
//            from 'build/docs/aggregateJavadoc/*.jar'
//            into 'build/libs'
//        }
//    }
//}